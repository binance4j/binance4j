package com.binance4j.margin.param;

import com.binance4j.core.dto.RateLimitType;
import com.binance4j.core.param.Params;
import com.binance4j.margin.client.MarginClient;

/** The {@link MarginClient#cancelOCO} params. */
public class CancelOCOParams extends Params {

	/** The related symbol. */
	private String symbol;
	/** Is the order isolated? */
	private Boolean isIsolated;
	/** Either orderListId or listClientOrderId must be provided. */
	private Long orderListId;
	/** Either orderListId or listClientOrderId must be provided. */
	private String listClientOrderId;
	/** Used to uniquely identify this cancel. Automatically generated by default. */
	private String newClientOrderId;

	/** @param symbol The related symbol. */
	public CancelOCOParams(String symbol) {
		super();
		rateLimitType = RateLimitType.UID;
		this.symbol = symbol;
	}

	/** @return the symbol */
	public String getSymbol() {
		return symbol;
	}

	/** @param symbol the symbol to set */
	public void setSymbol(String symbol) {
		this.symbol = symbol;
	}

	/** @return the isIsolated */
	public Boolean getIsIsolated() {
		return isIsolated;
	}

	/** @param isIsolated the isIsolated to set */
	public void setIsIsolated(Boolean isIsolated) {
		this.isIsolated = isIsolated;
	}

	/** @return the orderListId */
	public Long getOrderListId() {
		return orderListId;
	}

	/** @param orderListId the orderListId to set */
	public void setOrderListId(Long orderListId) {
		this.orderListId = orderListId;
	}

	/** @return the listClientOrderId */
	public String getListClientOrderId() {
		return listClientOrderId;
	}

	/** @param listClientOrderId the listClientOrderId to set */
	public void setListClientOrderId(String listClientOrderId) {
		this.listClientOrderId = listClientOrderId;
	}

	/** @return the newClientOrderId */
	public String getNewClientOrderId() {
		return newClientOrderId;
	}

	/** @param newClientOrderId the newClientOrderId to set */
	public void setNewClientOrderId(String newClientOrderId) {
		this.newClientOrderId = newClientOrderId;
	}

}