memberSearchIndex = [{"p":"com.binance4j.strategy.service","c":"BackTestService","l":"backTest(TradingStrategy, BarSeries)","u":"backTest(com.binance4j.strategy.TradingStrategy,org.ta4j.core.BarSeries)"},{"p":"com.binance4j.strategy.service","c":"BackTestService","l":"backTest(TradingStrategy, List<Candle>, CandlestickInterval)","u":"backTest(com.binance4j.strategy.TradingStrategy,java.util.List,com.binance4j.core.dto.CandlestickInterval)"},{"p":"com.binance4j.strategy.service","c":"BackTestService","l":"backTest(TradingStrategy, String, CandlestickInterval, String, String)","u":"backTest(com.binance4j.strategy.TradingStrategy,java.lang.String,com.binance4j.core.dto.CandlestickInterval,java.lang.String,java.lang.String)"},{"p":"com.binance4j.strategy.service","c":"BackTestService","l":"backTest(TradingStrategy, String, CandlestickInterval, String, String, String)","u":"backTest(com.binance4j.strategy.TradingStrategy,java.lang.String,com.binance4j.core.dto.CandlestickInterval,java.lang.String,java.lang.String,java.lang.String)"},{"p":"com.binance4j.strategy.dto","c":"BackTestResult","l":"BackTestResult(BarSeries, TradingRecord)","u":"%3Cinit%3E(org.ta4j.core.BarSeries,org.ta4j.core.TradingRecord)"},{"p":"com.binance4j.strategy.dto","c":"BackTestResult","l":"BackTestResult(BarSeries, TradingStatistics, TradingRecord)","u":"%3Cinit%3E(org.ta4j.core.BarSeries,com.binance4j.strategy.dto.TradingStatistics,org.ta4j.core.TradingRecord)"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"barSeries"},{"p":"com.binance4j.strategy.service","c":"StrategyBuilder","l":"build(TradingStrategy, BarSeries)","u":"build(com.binance4j.strategy.TradingStrategy,org.ta4j.core.BarSeries)"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"callback"},{"p":"com.binance4j.strategy.service","c":"BarService","l":"convert(Candle, CandlestickInterval)","u":"convert(com.binance4j.core.dto.Candle,com.binance4j.core.dto.CandlestickInterval)"},{"p":"com.binance4j.strategy.service","c":"BarService","l":"convert(Candle, CandlestickInterval)","u":"convert(com.binance4j.websocket.dto.Candle,com.binance4j.core.dto.CandlestickInterval)"},{"p":"com.binance4j.strategy.service","c":"BarService","l":"convert(Candle, CandlestickInterval, ZoneId)","u":"convert(com.binance4j.core.dto.Candle,com.binance4j.core.dto.CandlestickInterval,java.time.ZoneId)"},{"p":"com.binance4j.strategy.service","c":"BarService","l":"convert(Candle, CandlestickInterval, ZoneId)","u":"convert(com.binance4j.websocket.dto.Candle,com.binance4j.core.dto.CandlestickInterval,java.time.ZoneId)"},{"p":"com.binance4j.strategy.service","c":"BarService","l":"convert(Candle, Duration)","u":"convert(com.binance4j.core.dto.Candle,java.time.Duration)"},{"p":"com.binance4j.strategy.service","c":"BarService","l":"convert(Candle, Duration)","u":"convert(com.binance4j.websocket.dto.Candle,java.time.Duration)"},{"p":"com.binance4j.strategy.service","c":"BarService","l":"convert(Candle, Duration, ZoneId)","u":"convert(com.binance4j.core.dto.Candle,java.time.Duration,java.time.ZoneId)"},{"p":"com.binance4j.strategy.service","c":"BarService","l":"convert(Candle, Duration, ZoneId)","u":"convert(com.binance4j.websocket.dto.Candle,java.time.Duration,java.time.ZoneId)"},{"p":"com.binance4j.strategy.service","c":"BarSeriesService","l":"convert(List<Candle>, CandlestickInterval)","u":"convert(java.util.List,com.binance4j.core.dto.CandlestickInterval)"},{"p":"com.binance4j.strategy.service","c":"BarSeriesService","l":"convert(List<Candle>, CandlestickInterval, String)","u":"convert(java.util.List,com.binance4j.core.dto.CandlestickInterval,java.lang.String)"},{"p":"com.binance4j.strategy.service","c":"BarSeriesService","l":"convert(List<Candle>, CandlestickInterval, String, ZoneId)","u":"convert(java.util.List,com.binance4j.core.dto.CandlestickInterval,java.lang.String,java.time.ZoneId)"},{"p":"com.binance4j.strategy.service","c":"BarSeriesService","l":"convert(List<Candle>, CandlestickInterval, ZoneId)","u":"convert(java.util.List,com.binance4j.core.dto.CandlestickInterval,java.time.ZoneId)"},{"p":"com.binance4j.strategy.service","c":"BarSeriesService","l":"convert(List<Candle>, Duration)","u":"convert(java.util.List,java.time.Duration)"},{"p":"com.binance4j.strategy.service","c":"BarSeriesService","l":"convert(List<Candle>, Duration, String)","u":"convert(java.util.List,java.time.Duration,java.lang.String)"},{"p":"com.binance4j.strategy.service","c":"BarSeriesService","l":"convert(List<Candle>, Duration, String, ZoneId)","u":"convert(java.util.List,java.time.Duration,java.lang.String,java.time.ZoneId)"},{"p":"com.binance4j.strategy.service","c":"BarSeriesService","l":"convert(List<Candle>, Duration, ZoneId)","u":"convert(java.util.List,java.time.Duration,java.time.ZoneId)"},{"p":"com.binance4j.strategy","c":"TradingStrategy","l":"entry(BarSeries)","u":"entry(org.ta4j.core.BarSeries)"},{"p":"com.binance4j.strategy.dto","c":"BackTestResult","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.binance4j.strategy","c":"TradingStrategy","l":"exit(BarSeries)","u":"exit(org.ta4j.core.BarSeries)"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getAverageLoss()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getAverageProfit()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getAverageReturnPerBar()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getBuyAndHoldReturn()"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"getCallback()"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"getConfiguration()"},{"p":"com.binance4j.strategy.service","c":"BarSeriesService","l":"getDefaultBarSeriesName()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getExpectancy()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getExpectedShortfall(double)"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getGrossLoss()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getGrossProfit()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getGrossReturn()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getLinearTransactionCost(double, double)","u":"getLinearTransactionCost(double,double)"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getLosingPositionsRatio()"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"getMaximumBarCount()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getMaximumDrawdown()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getNetLoss()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getNetProfit()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getNumberOfBars()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getNumberOfBreakEvenPositions()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getNumberOfConsecutiveWinningPositions()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getNumberOfLosingPositions()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getNumberOfPositions()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getNumberOfWinningPositions()"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"getOnClosedConsumer()"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"getOnClosingConsumer()"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"getOnEnterConsumer()"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"getOnExitConsumer()"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"getOnFailureConsumer()"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"getOnMessageConsumer()"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"getOnOpenConsumer()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getProfitLoss()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getProfitLossPercentage()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getProfitLossRatio()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getReturnOverMaxDrawdown()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getSeries()"},{"p":"com.binance4j.strategy.dto","c":"SymbolBar","l":"getSymbol()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getTradingRecord()"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"getTradingStrategy()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getValueAtRisk(double)"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"getWinningPositionsRatio()"},{"p":"com.binance4j.strategy.dto","c":"BackTestResult","l":"hashCode()"},{"p":"com.binance4j.strategy.dto","c":"SymbolBar","l":"isBarFinal()"},{"p":"com.binance4j.strategy.dto","c":"SymbolBar","l":"isBarFinal(boolean)"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"onClosed(GenericCallback<WebsocketCloseObject>)","u":"onClosed(com.binance4j.websocket.callback.GenericCallback)"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"onClosing(GenericCallback<WebsocketCloseObject>)","u":"onClosing(com.binance4j.websocket.callback.GenericCallback)"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"onEnter(GenericCallback<BarSeries>)","u":"onEnter(com.binance4j.websocket.callback.GenericCallback)"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"onExit(GenericCallback<BarSeries>)","u":"onExit(com.binance4j.websocket.callback.GenericCallback)"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"onFailure(GenericCallback<ApiException>)","u":"onFailure(com.binance4j.websocket.callback.GenericCallback)"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"onMessage(GenericCallback<SymbolBar>)","u":"onMessage(com.binance4j.websocket.callback.GenericCallback)"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"onOpen(GenericCallback<Response>)","u":"onOpen(com.binance4j.websocket.callback.GenericCallback)"},{"p":"com.binance4j.strategy.dto","c":"BackTestResult","l":"series()"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"setCallback(StrategyCallback)","u":"setCallback(com.binance4j.strategy.StrategyCallback)"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"setConfiguration(WebsocketClientConfiguration)","u":"setConfiguration(com.binance4j.websocket.configuration.WebsocketClientConfiguration)"},{"p":"com.binance4j.strategy.service","c":"BarSeriesService","l":"setDefaultBarSeriesName(String)","u":"setDefaultBarSeriesName(java.lang.String)"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"setMaximumBarCount(int)"},{"p":"com.binance4j.strategy.dto","c":"SymbolBar","l":"setSymbol(String)","u":"setSymbol(java.lang.String)"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"setTradingStrategy(TradingStrategy)","u":"setTradingStrategy(com.binance4j.strategy.TradingStrategy)"},{"p":"com.binance4j.strategy.service","c":"PositionService","l":"shouldEnter(TradingStrategy, BarSeries)","u":"shouldEnter(com.binance4j.strategy.TradingStrategy,org.ta4j.core.BarSeries)"},{"p":"com.binance4j.strategy.service","c":"PositionService","l":"shouldEnter(TradingStrategy, BarSeries, int)","u":"shouldEnter(com.binance4j.strategy.TradingStrategy,org.ta4j.core.BarSeries,int)"},{"p":"com.binance4j.strategy.service","c":"PositionService","l":"shouldEnter(TradingStrategy, List<Candle>, CandlestickInterval)","u":"shouldEnter(com.binance4j.strategy.TradingStrategy,java.util.List,com.binance4j.core.dto.CandlestickInterval)"},{"p":"com.binance4j.strategy.service","c":"PositionService","l":"shouldEnter(TradingStrategy, List<Candle>, CandlestickInterval, int)","u":"shouldEnter(com.binance4j.strategy.TradingStrategy,java.util.List,com.binance4j.core.dto.CandlestickInterval,int)"},{"p":"com.binance4j.strategy.service","c":"PositionService","l":"shouldExit(TradingStrategy, BarSeries)","u":"shouldExit(com.binance4j.strategy.TradingStrategy,org.ta4j.core.BarSeries)"},{"p":"com.binance4j.strategy.service","c":"PositionService","l":"shouldExit(TradingStrategy, BarSeries, int)","u":"shouldExit(com.binance4j.strategy.TradingStrategy,org.ta4j.core.BarSeries,int)"},{"p":"com.binance4j.strategy.service","c":"PositionService","l":"shouldExit(TradingStrategy, List<Candle>, CandlestickInterval)","u":"shouldExit(com.binance4j.strategy.TradingStrategy,java.util.List,com.binance4j.core.dto.CandlestickInterval)"},{"p":"com.binance4j.strategy.service","c":"PositionService","l":"shouldExit(TradingStrategy, List<Candle>, CandlestickInterval, int)","u":"shouldExit(com.binance4j.strategy.TradingStrategy,java.util.List,com.binance4j.core.dto.CandlestickInterval,int)"},{"p":"com.binance4j.strategy.dto","c":"BackTestResult","l":"statistics()"},{"p":"com.binance4j.strategy","c":"StrategyCallback","l":"StrategyCallback()","u":"%3Cinit%3E()"},{"p":"com.binance4j.strategy.dto","c":"SymbolBar","l":"SymbolBar(Bar, boolean, String)","u":"%3Cinit%3E(org.ta4j.core.Bar,boolean,java.lang.String)"},{"p":"com.binance4j.strategy.dto","c":"BackTestResult","l":"toString()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"toString()"},{"p":"com.binance4j.strategy.dto","c":"BackTestResult","l":"tradingRecord()"},{"p":"com.binance4j.strategy.dto","c":"TradingStatistics","l":"TradingStatistics(TradingRecord, BarSeries)","u":"%3Cinit%3E(org.ta4j.core.TradingRecord,org.ta4j.core.BarSeries)"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"tradingStrategy"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"unwatch()"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"watch(Collection<String>, CandlestickInterval)","u":"watch(java.util.Collection,com.binance4j.core.dto.CandlestickInterval)"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"watch(Collection<String>, CandlestickInterval, ZoneId)","u":"watch(java.util.Collection,com.binance4j.core.dto.CandlestickInterval,java.time.ZoneId)"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"watch(String, CandlestickInterval)","u":"watch(java.lang.String,com.binance4j.core.dto.CandlestickInterval)"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"watch(String, CandlestickInterval, ZoneId)","u":"watch(java.lang.String,com.binance4j.core.dto.CandlestickInterval,java.time.ZoneId)"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"WatchService(TradingStrategy, StrategyCallback)","u":"%3Cinit%3E(com.binance4j.strategy.TradingStrategy,com.binance4j.strategy.StrategyCallback)"},{"p":"com.binance4j.strategy.service","c":"WatchService","l":"wsClient"}];updateSearchResults();