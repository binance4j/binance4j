package com.binance4j.spot.order;

import com.binance4j.core.request.FramedRequest;
import lombok.Data;
import lombok.EqualsAndHashCode;

/**
 * A request to cancel an OCO request
 */
@Data
@EqualsAndHashCode(callSuper = true)
public class CancelOCORequest extends FramedRequest {
	/**
	 * The symbol to cancel the order
	 */
	private String symbol;
	/**
	 * Either orderListId or listClientOrderId must be provided
	 */
	private Long orderListId;
	/**
	 * Either orderListId or listClientOrderId must be provided
	 */
	private String listClientOrderId;
	/**
	 * Used to uniquely identify this cancel. Automatically generated by
	 * default
	 */
	private String newClientOrderId;

	/**
	 * @param symbol The symbol to cancel the order
	 */
	public CancelOCORequest(String symbol) {
		super(1);
		this.symbol = symbol;
	}

	/**
	 * @param symbol      The symbol to cancel the order
	 * @param orderListId The order list id
	 */
	public CancelOCORequest(String symbol, Long orderListId) {
		this(symbol);
		this.orderListId = orderListId;
	}

	/**
	 * @param symbol            The symbol to cancel the order
	 * @param listClientOrderId The list client order id
	 */
	public CancelOCORequest(String symbol, String listClientOrderId) {
		this(symbol);
		this.listClientOrderId = listClientOrderId;
	}
}
