name: deploy

on:
  push:
    branches: 
     - connectors

env:
  FETCH_DEPTH: 0
  JAVA_VERSION: 17
  JAVA_DISTRIBUTION: 'adopt'
  BINANCE_API_KEY: ${{ secrets.BINANCE_API_KEY }}
  BINANCE_API_SECRET: ${{ secrets.BINANCE_API_SECRET }}
  BINANCE_TESTNET_API_KEY: ${{ secrets.BINANCE_TESTNET_API_KEY }}
  BINANCE_TESTNET_API_SECRET: ${{ secrets.BINANCE_TESTNET_API_SECRET }}
  GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
  PASSPHRASE: ${{ secrets.PASSPHRASE }}
  OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  SERVERS: '[{  "id": "ossrh",  "username": "${{ secrets.OSSRH_USERNAME }}",   "password": "${{ secrets.OSSRH_PASSWORD }}"}]'
  BLVT_INSTALLATION: cd binance4j-blvt && mvn install -DskipTests=true 
  C2C_INSTALLATION: cd binance4j-c2c && mvn install -DskipTests=true 
  CONVERT_INSTALLATION: cd binance4j-convert && mvn install -DskipTests=true 
  CORE_INSTALLATION: cd binance4j-core && mvn install -DskipTests=true 
  FIAT_INSTALLATION: cd binance4j-fiat && mvn install -DskipTests=true 
  LOAN_INSTALLATION: cd binance4j-loan && mvn install -DskipTests=true 
  MARGIN_INSTALLATION: cd binance4j-margin && mvn install -DskipTests=true 
  MARKET_INSTALLATION: cd binance4j-market && mvn install -DskipTests=true 
  MINING_INSTALLATION: cd binance4j-mining && mvn install -DskipTests=true 
  NFT_INSTALLATION: cd binance4j-nft && mvn install -DskipTests=true 
  PAY_INSTALLATION: cd binance4j-pay && mvn install -DskipTests=true 
  PORTFOLIO_MARGIN_INSTALLATION: cd binance4j-portfolio-margin && mvn install -DskipTests=true 
  REBATE_INSTALLATION: cd binance4j-rebate && mvn install -DskipTests=true 
  SAVINGS_INSTALLATION: cd binance4j-savings && mvn install -DskipTests=true 
  SPOT_INSTALLATION: cd binance4j-spot && mvn install -DskipTests=true 
  STAKING_INSTALLATION: cd binance4j-staking && mvn install -DskipTests=true 
  STRATEGY_INSTALLATION: cd binance4j-strategy && mvn install -DskipTests=true 
  VISION_INSTALLATION: cd binance4j-vision && mvn install -DskipTests=true 
  WALLET_INSTALLATION: cd binance4j-wallet && mvn install -DskipTests=true 
  WEBSOCKET_INSTALLATION: cd binance4j-websocket && mvn install -DskipTests=true 

jobs:
  
  ##### DEPLOYMENTS #####

  deploy-connectors:
    name: Deploy binance4j-connectors

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}
      - name: Java Setup
        uses: actions/setup-java@v2
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
      - name: Import GPG Key
        uses: crazy-max/ghaction-import-gpg@v1
      - name: Configure Settings
        uses: s4u/maven-settings-action@v2.6.0
        with:
          servers: ${{ env.SERVERS }}

        # ARTIFACTS INSTALLATIONS
        
      - name: Install binance4j-core
        run: ${{ env.CORE_INSTALLATION }}
        
      - name: Install binance4j-c2c
        run: ${{ env.C2C_INSTALLATION }}
        
      - name: Install binance4j-blvt
        run: ${{ env.BLVT_INSTALLATION }}
        
      - name: Install binance4j-convert
        run: ${{ env.CONVERT_INSTALLATION }}
        
      - name: Install binance4j-fiat
        run: ${{ env.FIAT_INSTALLATION }}

      - name: Install binance4j-loan
        run: ${{ env.LOAN_INSTALLATION }}

      - name: Install binance4j-margin
        run: ${{ env.MARGIN_INSTALLATION }}

      - name: Install binance4j-market
        run: ${{ env.MARKET_INSTALLATION }}

      - name: Install binance4j-mining
        run: ${{ env.MINING_INSTALLATION }}

      - name: Install binance4j-nft
        run: ${{ env.NFT_INSTALLATION }}

      - name: Install binance4j-pay
        run: ${{ env.PAY_INSTALLATION }}

      - name: Install binance4j-portfolio-margin
        run: ${{ env.PORTFOLIO_MARGIN_INSTALLATION }}

      - name: Install binance4j-rebate
        run: ${{ env.REBATE_INSTALLATION }}

      - name: Install binance4j-savings
        run: ${{ env.SAVINGS_INSTALLATION }}

      - name: Install binance4j-spot
        run: ${{ env.SPOT_INSTALLATION }}

      - name: Install binance4j-staking
        run: ${{ env.STAKING_INSTALLATION }}

      - name: Install binance4j-vision
        run: ${{ env.VISION_INSTALLATION }}

      - name: Install binance4j-wallet
        run: ${{ env.WALLET_INSTALLATION }}

      - name: Install binance4j-websocket
        run: ${{ env.WEBSOCKET_INSTALLATION }}

      - name: Install binance4j-strategy
        run: ${{ env.STRATEGY_INSTALLATION }}

      - name: Deploy
        run: cd binance4j-connectors && mvn -DskipTests=true deploy
