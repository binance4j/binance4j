/*
 * MIT License
 *
 * Copyright (c) 2022 Binance4j
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NON INFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

package com.binance4j.margin.param;

import com.binance4j.core.annotation.Param;
import com.binance4j.core.dto.RateLimitType;
import com.binance4j.core.param.Params;
import com.binance4j.margin.client.MarginClient;

/**
 * [MarginClient.cancelOCO] params.
 * 
 * @param symbol            Related symbol.
 * @param orderListId       Either `orderListId` or
 *                          `listClientOrderId` must be provided.
 * @param listClientOrderId Either `orderListId` or
 *                          `listClientOrderId` must be provided.
 * @param isIsolated        Is the order isolated?
 * @param newClientOrderId  Used to uniquely identify this cancel. Automatically
 *                          generated by default.
 */
data class CancelOCOParams(
symbol : String, Long orderListId,
listClientOrderId : String, Boolean isIsolated,
newClientOrderId : String):Params
{

	/**
	 * Creates an instance of {@link CancelOCOParams}.
	 * 
	 * @param symbol Related symbol.
	 */
	public CancelOCOParams(String symbol) {
		this(symbol, null, null, false, null);
	}

	/**
	 * Creates an instance of {@link CancelOCOParams}.
	 * 
	 * @param symbol      Related symbol.
	 * @param orderListId Order list id.
	 */
	public CancelOCOParams(String symbol, Long orderListId) {
		this(symbol, orderListId, null, false, null);
	}

	/**
	 * Creates an instance of {@link CancelOCOParams}.
	 * 
	 * @param symbol           Related symbol.
	 * @param orderListId      Order list id.
	 * @param newClientOrderId Used to uniquely identify this cancel. Automatically
	 *                         generated by default.
	 */
	public CancelOCOParams(String symbol, Long orderListId, String newClientOrderId) {
		this(symbol, orderListId, null, false, newClientOrderId);
	}

	/**
	 * Creates an instance of {@link CancelOCOParams}.
	 * 
	 * @param symbol           Related symbol.
	 * @param orderListId      Order list id.
	 * @param isIsolated       Is the order isolated?
	 * @param newClientOrderId Used to uniquely identify this cancel. Automatically
	 *                         generated by default.
	 */
	public CancelOCOParams(String symbol, Long orderListId, Boolean isIsolated, String newClientOrderId) {
		this(symbol, orderListId, null, isIsolated, newClientOrderId);
	}

	/**
	 * Creates an instance of {@link CancelOCOParams}.
	 * 
	 * @param symbol            Related symbol.
	 * @param listClientOrderId List client order id.
	 */
	public CancelOCOParams(String symbol, String listClientOrderId) {
		this(symbol, null, listClientOrderId, false, null);
	}

	/**
	 * Creates an instance of {@link CancelOCOParams}.
	 * 
	 * @param symbol            Related symbol.
	 * @param listClientOrderId List client order id.
	 * @param newClientOrderId  Used to uniquely identify this cancel. Automatically
	 *                          generated by default.
	 */
	public CancelOCOParams(String symbol, String listClientOrderId, String newClientOrderId) {
		this(symbol, null, listClientOrderId, false, newClientOrderId);
	}

	/**
	 * Creates an instance of {@link CancelOCOParams}.
	 * 
	 * @param symbol            Related symbol.
	 * @param listClientOrderId List client order id.
	 * @param isIsolated        Is the order isolated?
	 * @param newClientOrderId  Used to uniquely identify this cancel. Automatically
	 *                          generated by default.
	 */
	public CancelOCOParams(String symbol, String listClientOrderId, Boolean isIsolated, String newClientOrderId) {
		this(symbol, null, listClientOrderId, isIsolated, newClientOrderId);
	}
}